===============================
101-lazy_matrix_mul.py
===============================

Function that multiplies 2 matrices.

=======

``lazy_matrix_mul()`` multiplies 2 matrices.

::

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
    >>> lazy_matrix_mul([[1, 2, 3], [4, 5, 6], [7, 8, 9]], [[1, 2, 3], [4, 5, 6], [7, 8, 9]])
    matrix([[ 30,  36,  42],
            [ 66,  81,  96],
            [102, 126, 150]])

It works with simple case:

::
    >>> lazy_matrix_mul([[2]], [[3]])
    matrix([[6]])

ValueError can't be multiplied shape:

::
    >>> lazy_matrix_mul([], [[2]])
    Traceback (most recent call last):
    ValueError: shapes (1,0) and (1,1) not aligned: 0 (dim 1) != 1 (dim 0)

No ValueError empty matrix m_b:

::
    >>> lazy_matrix_mul([[2]], [])
    matrix([], shape=(1, 0), dtype=float64)

NO TypeError num:

::
    >>> lazy_matrix_mul(1, [[2]])
    matrix([[2]])

NO TypeError num:

::
    >>> lazy_matrix_mul([[2]], 1)
    matrix([[2]])

ValueError string:

::
    >>> lazy_matrix_mul([["Hello"]], [[2]])
    Traceback (most recent call last):
    ValueError: data type must provide an itemsize

ValueError string:

::
    >>> lazy_matrix_mul([[2]], [["Hello"]])
    Traceback (most recent call last):
    ValueError: data type must provide an itemsize

ValueError matrix list of list:

::
    >>> lazy_matrix_mul([1, 2, 3], [[2]])
    Traceback (most recent call last):
    ValueError: shapes (1,3) and (1,1) not aligned: 3 (dim 1) != 1 (dim 0)

No TypeError matrix list of list:

::
    >>> lazy_matrix_mul([[2]], [1, 2, 3])
    matrix([[2, 4, 6]])

ValueError not same size:

::
    >>> lazy_matrix_mul([[1, 2], [3, 4, 5], [6, 7]], [[1, 2, 3], [4, 5, 6]])
    Traceback (most recent call last):
    ValueError: shapes (1,3) and (2,3) not aligned: 3 (dim 1) != 2 (dim 0)

ValueError not same size:

::
    >>> lazy_matrix_mul([[1, 2], [3, 4], [6, 7]], [[1, 2, 3], [4, 5]])
    Traceback (most recent call last):
    ValueError: shapes (3,2) and (1,2) not aligned: 2 (dim 1) != 1 (dim 0)

TypeError one missing argument:

::
    >>> lazy_matrix_mul([[2]])
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

TypeError missing both arguments:

::
    >>> lazy_matrix_mul()
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

ValueError no num:

::
    >>> lazy_matrix_mul([[1, '2'], [3, 4]], [[5, 6], [7, 8]])
    Traceback (most recent call last):
    ValueError: data type must provide an itemsize
